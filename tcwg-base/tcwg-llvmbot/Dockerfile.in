FROM linaro/ci-#{ARCH}-tcwg-base-ubuntu:#{DISTRO}

RUN apt-get update \
 && DEBIAN_FRONTEND=noninteractive apt-get install -y \
 buildbot \
 && apt-get clean \
 && rm -rf \
 /var/lib/apt/lists/* \
 /tmp/* \
 /var/tmp/*

COPY buildslave/ llvm-config-buildslave/
RUN cd ./llvm-config-buildslave/ \
 && HOME=$(pwd) ./llvm-setup \
 && ./cleanup-users \
 && cd ../.. \
 && rm -rf \
 llvm-config-buildslave/ \
 /var/lib/apt/lists/* \
 /tmp/* \
 /var/tmp/* \
 && sudo -i -u buildslave mkdir /home/buildslave/buildslave

# Add ninja with support for memory-threshold job limitation.
RUN git clone -b master https://github.com/maxim-kuvyrkov/ninja.git \
 && cd ninja \
 && ./configure.py --bootstrap && ./ninja all && ./ninja_test \
 && mv ninja /usr/local/bin/ninja.bin \
 && cd .. \
 && rm -rf ninja

# Add current clang for libcxx bots.
RUN \
#if ARCH_arm64
 clang_ver=clang+llvm-6.0.0-aarch64-linux-gnu \
#else /* ARCH_armhf */
 clang_ver=clang+llvm-6.0.0-armv7a-linux-gnueabihf \
#endif
 && cd /usr/local \
 && wget --progress=dot:giga http://releases.llvm.org/6.0.0/$clang_ver.tar.xz \
 && tar xf $clang_ver.tar.xz \
 && rm $clang_ver.tar.xz

VOLUME /home

COPY run.sh .
COPY start.sh .

#if ARCH_amd64 || ARCH_arm64
ENTRYPOINT ["/run.sh"]
#else
ENTRYPOINT ["linux32", "/run.sh"]
#endif
CMD ["start.sh"]
