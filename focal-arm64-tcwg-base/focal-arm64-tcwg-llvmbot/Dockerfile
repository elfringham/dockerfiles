# Auto generated by ./tcwg-base/generate-dockerfiles.sh from tcwg-base/tcwg-llvmbot/Dockerfile.in. Do not edit.
FROM linaro/ci-arm64-tcwg-base-ubuntu:focal

# Add the toolchain test build PPA which provides gcc-11
RUN apt-get update \
 && DEBIAN_FRONTEND=noninteractive apt-get install -y \
 software-properties-common \
 && add-apt-repository -y ppa:ubuntu-toolchain-r/test \
 && apt-get clean \
 && rm -rf \
 /var/lib/apt/lists/* \
 /tmp/* \
 /var/tmp/*

RUN echo "deb https://apt.buildkite.com/buildkite-agent stable main" | tee /etc/apt/sources.list.d/buildkite-agent.list \
 && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 32A37959C2FA5C3C99EFBC32A79206696452D198

RUN apt-get update \
 && DEBIAN_FRONTEND=noninteractive apt-get install -y \
 binutils-gold \
 buildkite-agent \
 cpio \
 gfortran \
 htop \
 iotop \
 libedit-dev \
 libjson-perl \
 libtinfo-dev \
# We build clang+llvm releases on Ubuntu Bionic, which has libtinfo.so.5,
# and we link against it.
# Ubuntu Focal by default installs libtinfo6 (aka libtinfo.so.6), and
# our clang+llvm releases don't work on Ubuntu Focal unless we install
# legacy libtinfo5 (aka libtinfo.so.5).
# We should no longer need libtinfo5 when we switch building releases to
# Ubuntu Focal or later.
 libtinfo5 \
 libxml2-dev \
 linux-tools-common \
 python3-buildbot-worker \
 tmux \
 && apt-get clean \
 && rm -rf \
 /var/lib/apt/lists/* \
 /tmp/* \
 /var/tmp/*

# Add ninja with support for matching concurrency to available CPU allowance.
# It's installed with ".bin" extension and we then make a wrapper around it.
RUN git clone -b limit-on-cpu https://github.com/maxim-kuvyrkov/ninja.git \
 && cd ninja \
 && python3 ./configure.py --bootstrap && ./ninja all && ./ninja_test \
 && mv ninja /usr/local/bin/ninja.bin \
 && cd .. \
 && rm -rf ninja \
 && echo \
   $'#!/bin/sh\n' \
   $'exec /usr/local/bin/ninja.bin -l-10 "$@"' \
   > /usr/local/bin/ninja \
 && chmod +x /usr/local/bin/ninja

RUN new-user.sh --user tcwg-buildslave \
 # Initialize .ccache dir, so that we mount ccache docker volumes with
 # correct permissions.
 && sudo -i -u tcwg-buildslave ccache -p \
 # Allow non root users to access the buildkite config files
 && chmod -R a+rw /etc/buildkite-agent/

# Add the latest clang (12.0.0)
RUN \
 clang_ver=clang+llvm-12.0.0-aarch64-linux-gnu \
 && cd /usr/local \
 && wget --progress=dot:giga https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.0/$clang_ver.tar.xz \
 && tar xf $clang_ver.tar.xz \
 && rm $clang_ver.tar.xz

VOLUME /home

COPY run.sh .
COPY start.sh .

ENTRYPOINT ["/run.sh"]
CMD ["start.sh"]
# checksum: ae550f5da773ad7dfff4bda843581c3f
